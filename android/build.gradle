import java.text.SimpleDateFormat

buildscript {
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
        jcenter()
        maven { url "https://jitpack.io" }
        mavenCentral()
        google()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url 'http://developer.huawei.com/repo' }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.61"
        classpath 'com.blankj:bus-gradle-plugin:2.4'
    }
}

allprojects {
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
        jcenter()
        maven { url "https://jitpack.io" }
        mavenCentral()
        google()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url 'http://developer.huawei.com/repo' }
    }
}

rootProject.buildDir = '../build'
subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
}
subprojects {
    project.evaluationDependsOn(':app')
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    compileSdkVersion = 28
    buildToolsVersion = '28.0.3'
    minSdkVersion = 16
    targetSdkVersion = 28
    appTargetSdkVersion = 28
    versionCode = 75
    versionName = '7.0.3'
    sdkSourceCompatibility = 1.8
    sdkTargetCompatibility = 1.8
    appSourceCompatibility = 1.8
    appTargetCompatibility = 1.8
    nimOutputDir = "nim-outputs-${versionName}-${getBuildTime()}-${getGitVersion()}"

}

static def getGitVersion() {
    try {
        return 'git rev-parse --short HEAD'.execute().text.trim()
    } catch (Throwable th) {
        th.printStackTrace()
        return ""
    }
}

static def getBuildTime() {
    Date date = new Date()
    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyyMMdd")
    return simpleDateFormat.format(date)
}